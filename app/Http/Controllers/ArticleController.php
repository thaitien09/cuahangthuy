<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
class ArticleController extends Controller
{
    public function index()
    {
        // S·ª≠ d·ª•ng Query Builder ƒë·ªÉ l·∫•y c√°c b√†i vi·∫øt v·ªõi tr·∫°ng th√°i 'xu·∫•t b·∫£n'
        $articles = DB::table('articles')
            ->where('status', 'xu·∫•t b·∫£n') // L·ªçc b√†i vi·∫øt c√≥ tr·∫°ng th√°i 'xu·∫•t b·∫£n'
            ->orderBy('created_at', 'desc') // S·∫Øp x·∫øp theo th·ªùi gian t·∫°o gi·∫£m d·∫ßn
            ->get(); // L·∫•y t·∫•t c·∫£ c√°c b√†i vi·∫øt

        // Tr·∫£ v·ªÅ view v·ªõi c√°c b√†i vi·∫øt
        return view('articles.index', compact('articles'));
    }

    public function show($slug) {
        // L·∫•y b√†i vi·∫øt c·ª• th·ªÉ theo slug b·∫±ng Query Builder
        $article = DB::table('articles')->where('slug', $slug)->first();
        
        // Ki·ªÉm tra n·∫øu b√†i vi·∫øt kh√¥ng t·ªìn t·∫°i
        if (!$article) {
            return redirect()->route('articles.index')->with('error', 'B√†i vi·∫øt kh√¥ng t·ªìn t·∫°i!');
        }
        
        // X·ª≠ l√Ω tƒÉng l∆∞·ª£t xem
        $viewIncremented = false;
        
        // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p
        if (auth()->check()) {
            $userId = auth()->id();
            
            // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
            $user = DB::table('users')->where('id', $userId)->first();
            
            // L·∫•y danh s√°ch b√†i vi·∫øt ƒë√£ xem t·ª´ c·ªôt JSON
            $viewedArticles = json_decode($user->viewed_articles ?? '[]', true);
            
            // Ki·ªÉm tra xem b√†i vi·∫øt hi·ªán t·∫°i ƒë√£ c√≥ trong danh s√°ch ch∆∞a
            if (!in_array($article->id, $viewedArticles)) {
                // TƒÉng l∆∞·ª£t xem b√†i vi·∫øt
                DB::table('articles')
                    ->where('id', $article->id)
                    ->update(['view_count' => DB::raw('view_count + 1')]);
                    
                // Th√™m ID b√†i vi·∫øt v√†o danh s√°ch ƒë√£ xem
                $viewedArticles[] = $article->id;
                
                // C·∫≠p nh·∫≠t th√¥ng tin v√†o database
                DB::table('users')
                    ->where('id', $userId)
                    ->update(['viewed_articles' => json_encode($viewedArticles)]);
                    
                $viewIncremented = true;
            }
        } else {
            // ƒê·ªëi v·ªõi ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p, s·ª≠ d·ª•ng session ƒë·ªÉ tr√°nh ƒë·∫øm tr√πng
            $sessionKey = 'viewed_article_' . $article->id;
            
            if (!session()->has($sessionKey)) {
                // TƒÉng l∆∞·ª£t xem
                DB::table('articles')
                    ->where('id', $article->id)
                    ->update(['view_count' => DB::raw('view_count + 1')]);
                    
                session()->put($sessionKey, true);
                $viewIncremented = true;
            }
        }
        
        // L·∫•y l·∫°i b√†i vi·∫øt sau khi c√≥ th·ªÉ ƒë√£ c·∫≠p nh·∫≠t l∆∞·ª£t xem
        if ($viewIncremented) {
            $article = DB::table('articles')->where('slug', $slug)->first();
        }
        
        // L·∫•y t·∫•t c·∫£ b√†i vi·∫øt b·∫±ng Query Builder
        $articles = DB::table('articles')->get();
        
        // Pass danh s√°ch b√†i vi·∫øt v√† b√†i vi·∫øt c·ª• th·ªÉ v√†o view
        return view('articles.show', compact('articles', 'article'));
    }
    public function update(Request $request, $id)
{
    $request->validate([
        'title' => 'required|string|max:255',
        'summary' => 'nullable|string',
        'category' => 'required|string|max:255',
        'content' => 'required|string',
        'status' => 'required|in:nh√°p,xu·∫•t b·∫£n,l∆∞u tr·ªØ',
        'thumbnail' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
    ]);

    $article = DB::table('articles')->where('id', $id)->first();

    if (!$article) {
        abort(404);
    }

    $filename = $article->thumbnail;

    // N·∫øu ng∆∞·ªùi d√πng upload ·∫£nh m·ªõi
    if ($request->hasFile('thumbnail')) {
        $file = $request->file('thumbnail');
        $filename = time() . '_' . $file->getClientOriginalName();
        $file->move(public_path('images'), $filename); // üëà ƒë·ªïi th∆∞ m·ª•c t·ª´ 'uploads/thumbnails' ‚Üí 'images'
    }

    DB::table('articles')->where('id', $id)->update([
        'title' => $request->input('title'),
        'summary' => $request->input('summary'),
        'category' => $request->input('category'),
        'content' => $request->input('content'),
        'status' => $request->input('status'),
        'thumbnail' => $filename,
        'slug' => Str::slug($request->input('title')),
        'updated_at' => now(),
    ]);

    return redirect()->route('admin.articles.index')->with('success', 'C·∫≠p nh·∫≠t b√†i vi·∫øt th√†nh c√¥ng!');
}


    

    
}
