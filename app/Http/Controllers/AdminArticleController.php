<?php

namespace App\Http\Controllers;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Auth;


class AdminArticleController extends Controller
{
    public function index()
    {
        // S·ª≠ d·ª•ng Query Builder ƒë·ªÉ l·∫•y danh s√°ch b√†i vi·∫øt
        $articles = DB::table('articles')->get();  // L·∫•y t·∫•t c·∫£ b√†i vi·∫øt t·ª´ b·∫£ng 'articles'

        // Tr·∫£ v·ªÅ view v√† truy·ªÅn d·ªØ li·ªáu b√†i vi·∫øt
        return view('admin.articles.index', compact('articles'));
    }
    public function create()
{
    return view('admin.articles.create');
}
public function store(Request $request)
{
    $request->validate([
        'title' => 'required|string|max:255',
        'summary' => 'nullable|string',
        'category' => 'required|string|max:255',
        'content' => 'required|string',
        'status' => 'required|in:nh√°p,xu·∫•t b·∫£n,l∆∞u tr·ªØ',
        'thumbnail' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
    ]);

    $filename = null;

    if ($request->hasFile('thumbnail')) {
        $file = $request->file('thumbnail');
        $filename = time() . '_' . $file->getClientOriginalName();
        $file->move(public_path('images'), $filename);  // üëâ ƒê∆∞·ªùng d·∫´n m·ªõi
    }

    DB::table('articles')->insert([
        'title' => $request->input('title'),
        'summary' => $request->input('summary'),
        'category' => $request->input('category'),
        'content' => $request->input('content'),
        'status' => $request->input('status'),
        'thumbnail' => $filename,
        'slug' => Str::slug($request->input('title')),
        'user_id' => Auth::id() ?? 1,
        'view_count' => 0,
        'created_at' => now(),
        'updated_at' => now(),
    ]);

    return redirect()->route('admin.articles.index')->with('success', 'T·∫°o b√†i vi·∫øt th√†nh c√¥ng!');
}



public function edit($id)
{
    $article = DB::table('articles')->where('id', $id)->first();

    if (!$article) {
        abort(404); // N·∫øu kh√¥ng t√¨m th·∫•y, tr·∫£ v·ªÅ 404
    }

    return view('admin.articles.edit', compact('article'));
}
public function update(Request $request, $id)
{
    $request->validate([
        'title' => 'required|string|max:255',
        'summary' => 'nullable|string',
        'category' => 'required|string|max:255',
        'content' => 'required|string',
        'status' => 'required|in:nh√°p,xu·∫•t b·∫£n,l∆∞u tr·ªØ',
        'thumbnail' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
    ]);

    $article = DB::table('articles')->where('id', $id)->first();

    if (!$article) {
        abort(404);
    }

    $filename = $article->thumbnail;

    // N·∫øu ng∆∞·ªùi d√πng upload ·∫£nh m·ªõi
    if ($request->hasFile('thumbnail')) {
        $file = $request->file('thumbnail');
        $filename = time() . '_' . $file->getClientOriginalName();
        $file->move(public_path('images'), $filename); // üëà ƒë·ªïi th∆∞ m·ª•c t·ª´ 'uploads/thumbnails' ‚Üí 'images'
    }

    DB::table('articles')->where('id', $id)->update([
        'title' => $request->input('title'),
        'summary' => $request->input('summary'),
        'category' => $request->input('category'),
        'content' => $request->input('content'),
        'status' => $request->input('status'),
        'thumbnail' => $filename,
        'slug' => Str::slug($request->input('title')),
        'updated_at' => now(),
    ]);

    return redirect()->route('admin.articles.index')->with('success', 'C·∫≠p nh·∫≠t b√†i vi·∫øt th√†nh c√¥ng!');
}

}
